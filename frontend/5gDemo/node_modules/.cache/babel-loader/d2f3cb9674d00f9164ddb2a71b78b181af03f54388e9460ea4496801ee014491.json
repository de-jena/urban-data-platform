{"ast":null,"code":"import { MarkerClusterGroup } from 'leaflet.markercluster';\nimport { findRealParent, propsBinder } from 'vue2-leaflet';\nimport { DomEvent } from 'leaflet';\nconst props = {\n  options: {\n    type: Object,\n    default() {\n      return {};\n    }\n  }\n};\nexport default {\n  props,\n  data() {\n    return {\n      ready: false\n    };\n  },\n  mounted() {\n    this.mapObject = new MarkerClusterGroup(this.options);\n    //DomEvent.on(this.mapObject, this.$listeners);\n    propsBinder(this, this.mapObject, props);\n    this.ready = true;\n    this.parentContainer = findRealParent(this.$parent);\n    this.parentContainer.addLayer(this);\n    this.$nextTick(() => {\n      this.$emit('ready', this.mapObject);\n    });\n  },\n  beforeDestroy() {\n    this.parentContainer.removeLayer(this);\n  },\n  methods: {\n    addLayer(layer, alreadyAdded) {\n      if (!alreadyAdded) {\n        this.mapObject.addLayer(layer.mapObject);\n      }\n    },\n    removeLayer(layer, alreadyRemoved) {\n      if (!alreadyRemoved) {\n        this.mapObject.removeLayer(layer.mapObject);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAOA;AACA;AACA;AAEA;EACAA;IACAC;IACAC;MAAA;IAAA;EACA;AACA;AAEA;EACAC;EACAC;IACA;MACAC;IACA;EACA;EACAC;IACA;IACA;IACAC;IACA;IACA;IACA;IACA;MACA;IACA;EACA;EACAC;IACA;EACA;EACAC;IACAC;MACA;QACA;MACA;IACA;IACAC;MACA;QACA;MACA;IACA;EACA;AACA","names":["options","type","default","props","data","ready","mounted","propsBinder","beforeDestroy","methods","addLayer","removeLayer"],"sourceRoot":"node_modules/vue2-leaflet-markercluster","sources":["Vue2LeafletMarkercluster.vue"],"sourcesContent":["<template>\n  <div style=\"display: none;\">\n    <slot v-if=\"ready\"></slot>\n  </div>\n</template>\n\n<script>\nimport { MarkerClusterGroup } from 'leaflet.markercluster'\nimport { findRealParent, propsBinder } from 'vue2-leaflet'\nimport { DomEvent } from 'leaflet'\n\nconst props = {\n  options: {\n    type: Object,\n    default() { return {}; },\n  },\n};\n\nexport default {\n  props,\n  data() {\n    return {\n      ready: false,\n    };\n  },\n  mounted() {\n    this.mapObject = new MarkerClusterGroup(this.options);\n    //DomEvent.on(this.mapObject, this.$listeners);\n    propsBinder(this, this.mapObject, props);\n    this.ready = true;\n    this.parentContainer = findRealParent(this.$parent);\n    this.parentContainer.addLayer(this);\n    this.$nextTick(() => {\n      this.$emit('ready', this.mapObject);\n    });\n  },\n  beforeDestroy() {\n    this.parentContainer.removeLayer(this);\n  },\n  methods: {\n    addLayer(layer, alreadyAdded) {\n      if (!alreadyAdded) {\n        this.mapObject.addLayer(layer.mapObject);\n      }\n    },\n    removeLayer(layer, alreadyRemoved) {\n      if (!alreadyRemoved) {\n        this.mapObject.removeLayer(layer.mapObject);\n      }\n    }\n  }\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}