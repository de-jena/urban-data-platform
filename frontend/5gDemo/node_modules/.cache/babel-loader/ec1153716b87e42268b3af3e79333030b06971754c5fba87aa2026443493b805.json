{"ast":null,"code":"var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c,\n    _setup = _vm._self._setupProxy;\n  return _c(\"div\", {\n    staticClass: \"grid\"\n  }, [_c(\"div\", {\n    staticClass: \"url rim colspan2\"\n  }, [_c(\"b-field\", [_c(\"b-input\", {\n    model: {\n      value: _vm.baseurl,\n      callback: function ($$v) {\n        _vm.baseurl = $$v;\n      },\n      expression: \"baseurl\"\n    }\n  }), _c(\"b-button\", {\n    attrs: {\n      type: \"is-primary\",\n      outlined: \"\"\n    },\n    on: {\n      click: function ($event) {\n        return _vm.connect();\n      }\n    }\n  }, [_vm._v(\"Connect\")])], 1)], 1), _c(\"div\", {\n    staticClass: \"map_holder rim\"\n  }, [_c(\"l-map\", {\n    attrs: {\n      id: \"map\",\n      zoom: _vm.zoom,\n      center: _vm.center\n    }\n  }, [_c(\"l-tile-layer\", {\n    attrs: {\n      url: _vm.url,\n      attribution: _vm.attribution\n    }\n  }), _vm._l(_vm.points, function (point) {\n    return _c(\"l-marker\", {\n      key: point[\"@iot.id\"],\n      attrs: {\n        \"lat-lng\": _vm.res(point.location.coordinates)\n      },\n      on: {\n        click: function ($event) {\n          return _vm.markerWasClicked(point);\n        }\n      }\n    }, [_c(\"l-icon\", {\n      attrs: {\n        \"class-name\": \"custom-div-icon\"\n      }\n    }, [_c(\"div\", {\n      staticClass: \"marker-pin\",\n      class: {\n        selected: point[\"@iot.id\"] == _vm.selected\n      }\n    }, [_c(\"i\", {\n      staticClass: \"mdi mdi-radio-tower\"\n    })])])], 1);\n  })], 2)], 1), _c(\"div\", {\n    staticClass: \"sidebar_holder rim\"\n  }, [_c(\"router-view\", {\n    attrs: {\n      id: \"sidebar\"\n    },\n    on: {\n      TreeSelect: data => _vm.treeData = data\n    }\n  })], 1), _c(\"div\", {\n    staticClass: \"propertie_holder rim\"\n  }, [_c(\"PropertiesC\", {\n    attrs: {\n      data: _vm.treeData\n    }\n  })], 1), _c(\"div\", {\n    staticClass: \"corner\"\n  })]);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\nexport { render, staticRenderFns };","map":{"version":3,"names":["render","_vm","_c","_self","_setup","_setupProxy","staticClass","model","value","baseurl","callback","$$v","expression","attrs","type","outlined","on","click","$event","connect","_v","id","zoom","center","url","attribution","_l","points","point","key","res","location","coordinates","markerWasClicked","class","selected","TreeSelect","data","treeData","staticRenderFns","_withStripped"],"sources":["/home/markus/dev/org.eclipse.sensinact.gateway/prototype/webclient/src/views/Map.vue"],"sourcesContent":["var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c,\n    _setup = _vm._self._setupProxy\n  return _c(\"div\", { staticClass: \"grid\" }, [\n    _c(\n      \"div\",\n      { staticClass: \"url rim colspan2\" },\n      [\n        _c(\n          \"b-field\",\n          [\n            _c(\"b-input\", {\n              model: {\n                value: _vm.baseurl,\n                callback: function ($$v) {\n                  _vm.baseurl = $$v\n                },\n                expression: \"baseurl\",\n              },\n            }),\n            _c(\n              \"b-button\",\n              {\n                attrs: { type: \"is-primary\", outlined: \"\" },\n                on: {\n                  click: function ($event) {\n                    return _vm.connect()\n                  },\n                },\n              },\n              [_vm._v(\"Connect\")]\n            ),\n          ],\n          1\n        ),\n      ],\n      1\n    ),\n    _c(\n      \"div\",\n      { staticClass: \"map_holder rim\" },\n      [\n        _c(\n          \"l-map\",\n          { attrs: { id: \"map\", zoom: _vm.zoom, center: _vm.center } },\n          [\n            _c(\"l-tile-layer\", {\n              attrs: { url: _vm.url, attribution: _vm.attribution },\n            }),\n            _vm._l(_vm.points, function (point) {\n              return _c(\n                \"l-marker\",\n                {\n                  key: point[\"@iot.id\"],\n                  attrs: { \"lat-lng\": _vm.res(point.location.coordinates) },\n                  on: {\n                    click: function ($event) {\n                      return _vm.markerWasClicked(point)\n                    },\n                  },\n                },\n                [\n                  _c(\"l-icon\", { attrs: { \"class-name\": \"custom-div-icon\" } }, [\n                    _c(\n                      \"div\",\n                      {\n                        staticClass: \"marker-pin\",\n                        class: { selected: point[\"@iot.id\"] == _vm.selected },\n                      },\n                      [_c(\"i\", { staticClass: \"mdi mdi-radio-tower\" })]\n                    ),\n                  ]),\n                ],\n                1\n              )\n            }),\n          ],\n          2\n        ),\n      ],\n      1\n    ),\n    _c(\n      \"div\",\n      { staticClass: \"sidebar_holder rim\" },\n      [\n        _c(\"router-view\", {\n          attrs: { id: \"sidebar\" },\n          on: { TreeSelect: (data) => (_vm.treeData = data) },\n        }),\n      ],\n      1\n    ),\n    _c(\n      \"div\",\n      { staticClass: \"propertie_holder rim\" },\n      [_c(\"PropertiesC\", { attrs: { data: _vm.treeData } })],\n      1\n    ),\n    _c(\"div\", { staticClass: \"corner\" }),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}