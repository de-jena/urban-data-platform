library ibisCustomerInfoToSensinact;

import ibisToSensinactLibrary;

modeltype ECORE "strict" uses ecore('http://www.eclipse.org/emf/2002/Ecore');
modeltype CUSTOMERINFO uses "https://jena.de/models/ibis/customerinfoservice/1.0";
modeltype SENSINACT uses "https://jena.de/models/ibis/sensinact/1.0";
modeltype PROVIDER uses "https://eclipse.org/sensinact/core/provider/1.0";

mapping CUSTOMERINFO::CurrentAnnouncementResponse::announcementToService(): SENSINACT::CustomerInfoCurrentAnnouncement {
	resource := object SENSINACT::CustomerInfoCurrentAnnouncementData {
    	
    	timestamp := self.currentAnnouncementData.timeStamp.getEInstant();	
    	serviceName := "CustomerInformationService";
    	serviceOperation := "CurrentAnnouncement";
    	
    	announcementRef := self.currentAnnouncementData.currentAnnouncement.announcementRef.value;
    	announcementText += self.currentAnnouncementData.currentAnnouncement.announcementText.value;
    	announcementTTSText += self.currentAnnouncementData.currentAnnouncement.announcementTTSText.value;
    }
}

mapping CUSTOMERINFO::CurrentConnectionInformationResponse::connectionToService(): SENSINACT::CustomerInfoCurrentConnection {
	resource := object SENSINACT::CustomerInfoCurrentConnectionData {
    	timestamp := self.currentConnectionData.timeStamp.getEInstant();	
    	serviceName := "CustomerInformationService";
    	serviceOperation := "CurrentConnectionInformation";
    //	TODO: connection is a list in ibis 	
	};
}

mapping CUSTOMERINFO::CurrentDisplayContentResponse::displayToService(): SENSINACT::CustomerInfoCurrentDisplayContent {
	resource := object SENSINACT::CustomerInfoCurrentDisplayContentData {
	
    	timestamp := self.currentDisplayContentData.timeStamp.getEInstant();	
    	serviceName := "CustomerInformationService";
    	serviceOperation := "CurrentDisplayContent";
    	var d := self.currentDisplayContentData.currentDisplayContent-> first();
    	lineName := d.lineInformation.lineName->first().value;
    	destinationName := d.destination.destinationName->first().value;
    //	TODO: add display content list to sensinact model
    };
}

mapping CUSTOMERINFO::CurrentStopIndexResponse::stopIndexToService(): SENSINACT::CustomerInfoCurrentStopIndex {
	resource := object SENSINACT::CustomerInfoCurrentStopIndexData {
    	timestamp := self.currentStopIndexData.timeStamp.getEInstant();
    	serviceName := "CustomerInformationService";
    	serviceOperation := "CurrentStopIndex";
    	currentStopIndex := self.currentStopIndexData.currentStopIndex.value;
    }
}

mapping CUSTOMERINFO::CurrentStopPointResponse::stopPointToService(): SENSINACT::CustomerInfoCurrentStopPoint {
	resource := object SENSINACT::CustomerInfoCurrentStopPointData {
    	timestamp := self.currentStopPointData.timeStamp.getEInstant();
    	serviceName := "CustomerInformationService";
    	serviceOperation := "CurrentStopPointData";
    		
    	stopIndex := self.currentStopPointData.currentStopPoint.stopIndex.value;
    	stopRef := self.currentStopPointData.currentStopPoint.stopRef.value;
    	stopName += self.currentStopPointData.currentStopPoint.stopName.value;
    	stopAlternativeName += self.currentStopPointData.currentStopPoint.stopAlternativeName.value; 
    	platform := self.currentStopPointData.currentStopPoint.platform.value;
    	arrivalScheduled := self.currentStopPointData.currentStopPoint.arrivalScheduled.getEInstant();
    	arrivalExpected := self.currentStopPointData.currentStopPoint.arrivalExpected.getEInstant();
    	departureScheduled := self.currentStopPointData.currentStopPoint.departureScheduled.getEInstant();
    	departureExpected := self.currentStopPointData.currentStopPoint.departureExpected.getEInstant();
    	recordedArrivalTime := self.currentStopPointData.currentStopPoint.recordedArrivalTime.getEInstant();
    	distanceToNextStop := self.currentStopPointData.currentStopPoint.distanceToNextStop.value;
    	fareZone += self.currentStopPointData.currentStopPoint.fareZone.value;
    }
}

mapping CUSTOMERINFO::TripDataResponse::tripToService(): SENSINACT::CustomerInfoTrip {
	resource := object SENSINACT::CustomerInfoTripData {
    	timestamp := self.tripData.timeStamp.getEInstant();
    	serviceName := "CustomerInformationService";
    	serviceOperation := "TripData";
    		
    	vehicleRef := self.tripData.vehicleRef.value;
    	defaultLanguage := self.tripData.defaultLanguage.value;
    	tripRef := self.tripData.tripInformation.tripRef.value;
    	locationState := self.tripData.tripInformation.locationState.toString();
    	timetableDelay := self.tripData.tripInformation.timetableDelay.value;
    	routeDirection := self.tripData.tripInformation.routeDirection.toString();
    	runNumber := self.tripData.tripInformation.runNumber.value;
    	patternNumber := self.tripData.tripInformation.patternNumber.value;
    	pathDestinationNumber := self.tripData.tripInformation.pathDestinationNumber.value;
    	additionalTextMsg := self.tripData.tripInformation.additionalTextMessage.value;
    	additionalTextMsg1 := self.tripData.tripInformation.additionalTextMessage1.value;
    	additionalTextMsg2 := self.tripData.tripInformation.additionalTextMessage2.value;
    	additionalTextMsg3 := self.tripData.tripInformation.additionalTextMessage3.value;
    	additionalTextMsg4 := self.tripData.tripInformation.additionalTextMessage4.value;
    	additionalTextMsg5 := self.tripData.tripInformation.additionalTextMessage5.value;
    	additionalTextMsg6 := self.tripData.tripInformation.additionalTextMessage6.value;
    	additionalTextMsg7 := self.tripData.tripInformation.additionalTextMessage7.value;
    	additionalTextMsg8 := self.tripData.tripInformation.additionalTextMessage8.value;
    	additionalTextMsg9 := self.tripData.tripInformation.additionalTextMessage9.value;
    	currentStopIndex := self.tripData.currentStopIndex.value;
    };
}

mapping CUSTOMERINFO::VehicleDataResponse::vehicleToService(): SENSINACT::CustomerInfoVehicle {
	resource := object SENSINACT::CustomerInfoVehicleData {
    	timestamp := self.vehicleData.timeStamp.getEInstant();
    	serviceName := "CustomerInformationService";
    	serviceOperation := "VechicleData";
    	vehicleRef := self.vehicleData.vehicleRef.value;
    	routeDeviation := self.vehicleData.routeDeviation.toString();
    	doorState := self.vehicleData.doorState.toString();
    	inPanic := self.vehicleData.inPanic.value;
    	vehicleStopRequested := self.vehicleData.vehicleStopRequested.value;
    	exitSide := self.vehicleData.exitSide.toString();
    	movingDirectionForward := self.vehicleData.movingDirectionForward.value;
    	vehicleMode := self.vehicleData.vehicleMode.toString();
    	speakerActive := self.vehicleData.speakerActive.value;
    	stopInformationActive := self.vehicleData.stopInformationActive.value;
    	tripState := self.vehicleData.tripState.toString();
	};
}

mapping CUSTOMERINFO::AllDataResponse::allDataToService(): SENSINACT::CustomerInfoAll {
	var eClass := SENSINACT::CustomerInfoAllData.oclAsType(ECORE::EClass);
	var friendlyServiceName :="CustomerInformationService"; 
	resource := object SENSINACT::CustomerInfoAllData {
    	timestamp := self.allData.timeStamp.getEInstant();
    	serviceName := "CustomerInformationService";
    	serviceOperation := "AllData";
    		
    	tripState := self.allData.tripState.toString();
    	stopInformationActive := self.allData.stopInformationActive.value;
    	speakerActive := self.allData.speakerActive.value;
    	vehicleMode := self.allData.vehicleMode.toString();
    	movingDirectionForward := self.allData.movingDirectionForward.value;
    	exitSide := self.allData.exitSide.toString();
    	vehicleStopRequested := self.allData.vehicleStopRequested.value;
    	inPanic := self.allData.inPanic.value;
    	doorState := self.allData.doorState.toString();
    	routeDeviation := self.allData.routeDeviation.toString();
    	vehicleRef := self.allData.vehicleRef.value;
    	defaultLanguage := self.allData.defaultLanguage.value;
    	currentStopIndex := self.allData.currentStopIndex.value;
	};
}