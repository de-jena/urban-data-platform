library ibisGNSSLocationToSensinact;

import ibisToSensinactLibrary;

modeltype ECORE "strict" uses ecore('http://www.eclipse.org/emf/2002/Ecore');
modeltype GNSSLOCATION uses "https://jena.de/models/ibis/gnsslocationservice/1.0";
modeltype SENSINACT uses "https://jena.de/models/ibis/sensinact/1.0";
modeltype PROVIDER uses "https://eclipse.org/sensinact/core/provider/1.0";

mapping GNSSLOCATION::GNSSLocationData::gnssLocationToService(): SENSINACT::GNSSLocation {
	var friendlyServiceName := "GNSSLocationService";
	resource := object SENSINACT::GNSSLocationData {
    	timestamp := self.time.getEInstant();
    	serviceName := friendlyServiceName;
    	serviceOperation := "GNSSLocation";
    	
    	latitudeDegree := self.latitude.degree.value;
    	longitudeDegree := self.longitude.degree.value;
    	latitudeDirection := self.latitude.direction.value;
    	longitudeDirection := self.longitude.direction.value;
    	date := self.date.getEInstant();
    	time := self.time.getEInstant();
    	altitude := self.altitude.value;
    	speedOverGround := self.speedOverGround.value;
    	signalQuality := self.signalQuality.toString();
    	numberOfSatellites := self.numberOfSatellites.value;
    	horizontalDilutionOfPrecision := self.horiziontalDilutionOfPrecision.value;
    	verticalDilutionOfPrecision := self.verticalDilutionOfPrecision.value;
    	trackDegreeTrue := self.trackDegreeTrue.value;
    	trackDegreeMagnetic := self.trackDegreeMagnetic.value;
    	gNSSType := self.gNSSType.toString();
    	gNSSCoordinateSystem := self.gNSSCoordinateSystem.toString();
	};
}
